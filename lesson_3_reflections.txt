Question: When would you want to use a remote repository rather than keeping all your work local?

I would want to use a remote repository for a few reasons. My first reason is to keep my data safe. If something were to happen to
my main computer, I would want to still be able to access all my work. I would also use a remote repository because I want to be
able to access my code on different computers. I have a desktop, laptop, and work computer. It is easier to use a remote repository
to access my work instead of having to continually download and transfer my work by flash drive. And I would also want to use a 
remote repository so that I can have others contribute to my work. If we all work together, we can make the world a better place!!!

Question: Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote
repository?

My main reason for not wanting Git to automatically pull would be because there might be changes made by myself or others that I'm
not ready to have be a part of the final code. The commits are there to help manage the logical changes made to the code, so too
should pulls and also pushes be done at logical changes and only once both sources are reviewed to make sure there is no conflic
with the code or no unexpected chagnes.

Question: Describe the differences between forks, clones, and branches. When would you use one instead of
another?

The difference is that brances are used locally. When you push a branch to GitHub, it is only that one branch
that is shared, it is disconnected from commits from other brances. Clones are exact copies of a commit, and
they can be stored either remote or locally. A fork is like a clone, but it is only remote. Once it is moved
to a local machine it becomes just a clone.
I would use a branch while working locally. It is what I would use when I'm actively coding and making
changes. I would use a clone mainly when working locally as well, a fork is best for working on a remote
commit.

Question: What is the benefit of having a copy of the last known state of the remote stored locally?

The benifit is that by having the most recent update of the remote, you are more likely to be able to assess
and changes that were made or that you make. Also you can work offline and when you reconnect to the remote
you will be closer to the origional than if you had not stored a copy of the last known state.

Question: How would you collaborate without using Git or GitHub? What would be easier, and what would be
harder?

I would use e-mail, a direct messaging app, and something like dropbox or other cloud service to share
different files. A direct messaging app or something similar would be easier by having that direct and
immediate contact with others who you are collaborating with. You'd be able to share informatoin more
quickly. E-mail and cloud services are a nice was to have access to transfered files and messages, but
they are definitely limited by the tedious and slow nature of uploading full files, limited by how much
you can tranfer, and you have to acctively check up on the current state of messaging and file changes.

Question: When would you want to make changes in a separate branch rather than directly in master? what
benefits does each approach have?

I would want to make changes in a separate branch instead of the master when working on potentially big
changes to the file. It would be branches that are experimental or trying something new. The benefit of
working directly on the master branch would be not having to manage all the extra branches. But the
potential for major mistakes to the master are big, so I feel that always using the seperate branches
are the most bennificial.